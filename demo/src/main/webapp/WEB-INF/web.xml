<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
    
    <display-name>Spring Demo</display-name>
    
    <!-- Spring应用上下文 ApplicationContext -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/applicationContext-*.xml
            classpath*:/applicationContext.xml
        </param-value>
    </context-param>
    <listener> 
        <!-- <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class> -->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <!-- 前置控制器,拦截匹配的请求，Servlet拦截匹配规则要自已定义，把拦截下来的请求，依据相应的规则分发到目标Controller来处理，是配置spring MVC的第一步 -->
    <servlet>
        <servlet-name>mvc-dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- Servlet对应的上下文配置，默认为/WEB-INFO/$servlet-name$-servlet.xml -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:/applicationContext-dispatcherServlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc-dispatcher</servlet-name>
        <!-- mvc-dispatcher拦截所有请求 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- 应用mvc-dispatcher时如果配置<url-pattern>/</url-pattern>,会导致页面引用的JS、CSS找不到  -->
    <!-- 方法一：使用spring mvc 的 resources 注解 用来处理静态文件 -->
    <!-- 方法二：在web.xml中添加如下代码(推荐) -->
    <!-- js,img,css要使用绝对路径 ，如/js/**; -->
    <!-- <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping> -->
</web-app>