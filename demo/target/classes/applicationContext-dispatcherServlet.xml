<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    
    <!-- 激活@Required、@Autowired、JSR250's、@PostConstruct、@PreDestroy、@Resource等标注。 -->
    <!-- 自动完成上述注解声明 当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除-->
    <!-- <context:annotation-config/> -->
    
    <!-- DispatcherServlet上下文，只搜索@Controller标注的类，其他标注类不搜索。-->
    <!-- 扫描指定包下的类，并注册被@Component，@Controller，@Service，@Repository等注解标记的组件。 -->
    <context:component-scan base-package="com.cn.demo">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 启用注解驱动 -->
    <!-- 自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <mvc:annotation-driven/>
    
    <!-- 静态资源处理 css,img,js ,也可在web.xml配置default-servlet，也可配置<mvc:default-servlet-handler />(推荐)-->
    <!-- <mvc:resources location="/" mapping="/**"></mvc:resources> -->
    <mvc:default-servlet-handler />
    
    <!-- 配置ViewResolver，可以有多个ViewResolver，使用order排序，InternalResourceViewResolver放在最后 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 在页面中使用${rc.contextPath}就可获得contextPath -->
        <!-- <property name="requestContextAttribute" value="rc" /> -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/jsps/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 用于将对象转换为 JSON(默认把jackson-annotations.jar，jackson-core.jar，jackson-databind.jar引入即可返回json，不需要再加下面的配置)-->  
    <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/plain;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>  
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="stringConverter" />  
                <ref bean="jsonConverter" />  
            </list>  
        </property>
    </bean>
    
    <!--200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 ,依赖commons-upload.jar包-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true" />
    </bean>
</beans>
